plugins {
    id "org.springframework.boot" version "2.7.5"
    id "java"
    id "idea"
    id "com.diffplug.spotless" version "6.11.0"
    id "com.github.ben-manes.versions" version "0.44.0"
    id 'io.spring.dependency-management' version "1.1.0"
}


repositories {
    mavenCentral()
}

ext.javaJwtVersion = "4.2.1"
ext.poiVersion = "5.2.3"
ext.sentryVersion = "6.8.0"
ext.springdocVersion = "1.6.12"
ext.hibernateTypesVersion = "2.20.0"
ext.p6spyVersion = "1.8.1"
ext.awspringVersion = "2.4.2"
ext.amazoneawsVersion = "1.0.10"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.apache.commons:commons-lang3"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.h2database:h2"
    implementation 'mysql:mysql-connector-java'
    implementation "software.aws.rds:aws-mysql-jdbc:1.1.1"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:$p6spyVersion"
    implementation "com.auth0:java-jwt:$javaJwtVersion"
    implementation "org.apache.poi:poi:$poiVersion"
    implementation "org.apache.poi:poi-ooxml:$poiVersion"
    implementation "io.sentry:sentry-spring-boot-starter:$sentryVersion"
    implementation "io.sentry:sentry-logback:$sentryVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:$springdocVersion"
    implementation "org.springdoc:springdoc-openapi-data-rest:$springdocVersion"
    implementation "com.vladmihalcea:hibernate-types-52:$hibernateTypesVersion"
    implementation "org.flywaydb:flyway-mysql"
    implementation "io.awspring.cloud:spring-cloud-starter-aws:$awspringVersion"
    implementation "io.awspring.cloud:spring-cloud-aws-autoconfigure:$awspringVersion"
    implementation "com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:$amazoneawsVersion"
    testAnnotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
}

java.sourceCompatibility = JavaVersion.VERSION_17

test {
    exclude '**/*'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = 'demo.jar'
}

spotless {
    java {
        removeUnusedImports()

        googleJavaFormat('1.15.0')
    }
}

task cleanGeneatedDir(type: Delete) {
    // 인텔리제이 annotation processor 가 생성한 Q클래스가 clean 태스크로 삭제되는 게 불편하다면 둘 중에 하나를 선택
    delete file('src/main/generated')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
